{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\Desktop\\\\geo\\\\geo\\\\src\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { authenticationService } from '@/_services';\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) =>\n/*#__PURE__*/\nReact.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    //    // const currentUser = authenticationService.currentUserValue;\n    //    console.log('current')\n    console.log(this.props); //    console.log(this.state)\n    // console.log(currentUser)\n    //     if (!currentUser) {\n    //         // not logged in so redirect to login page with the return url\n    //         return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    //     }\n    //     // check if route is restricted by role\n    //     if (roles && roles.indexOf(currentUser.role) === -1) {\n    //         // role not authorised so redirect to home page\n    //         //????? direct to stud or teac page\n    //         return <Redirect to={{ pathname: '/'}} />\n    //     }\n    //     // authorised so return component\n    //     return <Component {...props} />\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/julia/Desktop/geo/geo/src/PrivateRoute.jsx"],"names":["React","Route","Redirect","PrivateRoute","component","Component","roles","rest","props","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AAEE,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD;AAAA;AACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAG;AAGhC;AACA;AACGC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB,EAL6B,CAMhC;AACG;AACJ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACC,GAtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AA2BF,eAAeL,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// import { authenticationService } from '@/_services';\r\n\r\n  const PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route {...rest} render={props =>{\r\n\r\n        \r\n     //    // const currentUser = authenticationService.currentUserValue;\r\n     //    console.log('current')\r\n        console.log(this.props)\r\n     //    console.log(this.state)\r\n        // console.log(currentUser)\r\n    //     if (!currentUser) {\r\n    //         // not logged in so redirect to login page with the return url\r\n    //         return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    //     }\r\n\r\n    //     // check if route is restricted by role\r\n    //     if (roles && roles.indexOf(currentUser.role) === -1) {\r\n    //         // role not authorised so redirect to home page\r\n    //         //????? direct to stud or teac page\r\n    //         return <Redirect to={{ pathname: '/'}} />\r\n    //     }\r\n\r\n    //     // authorised so return component\r\n    //     return <Component {...props} />\r\n    }}\r\n />\r\n)\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}