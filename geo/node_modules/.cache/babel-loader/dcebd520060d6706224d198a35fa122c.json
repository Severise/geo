{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\555\\\\Desktop\\\\app\\\\geo\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport home from './components/home.html';\nimport sign from './components/sign.html';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n\n    this.getDataFromDb = () => {\n      fetch('http://localhost:3001/api/getData').then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n\n    this.putDataToDB = message => {\n      let currentIds = this.state.data.map(data => data.id);\n      let idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post('http://localhost:3001/api/putData', {\n        id: idToBeAdded,\n        message: message\n      });\n    };\n\n    this.deleteFromDB = idTodelete => {\n      parseInt(idTodelete);\n      let objIdToDelete = null;\n      this.state.data.forEach(dat => {\n        if (dat.id == idTodelete) {\n          objIdToDelete = dat._id;\n        }\n      }); // axios.delete('http://localhost:3001/api/deleteData', {\n      //   data: {\n      //     id: objIdToDelete,\n      //   },\n      // });\n    };\n\n    this.updateDB = (idToUpdate, updateToApply) => {\n      let objIdToUpdate = null;\n      parseInt(idToUpdate);\n      this.state.data.forEach(dat => {\n        if (dat.id == idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      }); // axios.post('http://localhost:3001/api/updateData', {\n      //   id: objIdToUpdate,\n      //   update: { message: updateToApply },\n      // });\n    };\n  }\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has\n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  } // never let a process live forever\n  // always kill a process everytime we are done using it\n\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  } // just a note, here, in the front end, we use the id key of our data object\n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify\n  // data base entries\n  // our first get method that uses our backend api to\n  // fetch data from our data base\n\n\n  // here is our UI\n  // it is easy to understand their functions when you\n  // see them render into our screen\n  render() {\n    const {\n      data\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/learn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"learn\")), React.createElement(\"a\", {\n      href: \"/test\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"test\")), React.createElement(\"a\", {\n      href: \"/teacher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"teachers\")), React.createElement(\"a\", {\n      href: \"/student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"students\"))))), \"// \", React.createElement(\"div\", {\n      id: \"sign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"//     \", React.createElement(\"div\", {\n      class: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"//         \", React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"teach\",\n      name: \"group\",\n      checked: \"checked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), \"//         \", React.createElement(\"label\", {\n      for: \"teach\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"\\u0412\\u0445\\u043E\\u0434 \\u0434\\u043B\\u044F \\u0443\\u0447\\u0438\\u0442\\u0435\\u043B\\u0435\\u0439\"), \"//         \", React.createElement(\"form\", {\n      action: \"/loginteachers\",\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"//             \", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"//                 \", React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"\\u0418\\u043C\\u044F\"), \"//                     \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), \"//                 \", React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), \"//                     \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), \"//                 \", React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")), \"//             \"), \"//         \"), \"//     \"), \"//     \", React.createElement(\"div\", {\n      class: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"  /  \")), \"//     \", React.createElement(\"div\", {\n      class: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"//         \", React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"stud\",\n      name: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), \"//         \", React.createElement(\"label\", {\n      for: \"stud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"\\u0412\\u0445\\u043E\\u0434 \\u0434\\u043B\\u044F \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u043E\\u0432\"), \"//         \", React.createElement(\"form\", {\n      action: \"/loginstudents\",\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"//             \", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"//                 \", React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"teacher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"\\u0418\\u043C\\u044F \\u0443\\u0447\\u0438\\u0442\\u0435\\u043B\\u044F\"), \"//                     \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"teacher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), \"//                 \", React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"\\u0418\\u043C\\u044F\"), \"//                     \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), \"//                 \", React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), \"//                     \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), \"//                 \", React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")), \"//             \"), \"//         \"), \"//     \"), \"// \"));\n  }\n\n} // export default App;\n\n\nexport default React.createElement(Route, {\n  path: \"/\",\n  component: home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: home,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}), \"// \", React.createElement(Route, {\n  path: \"/sign\",\n  component: sign,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 160\n  },\n  __self: this\n}));","map":{"version":3,"sources":["C:/Users/555/Desktop/app/geo/src/App.js"],"names":["React","Component","Route","home","sign","axios","App","state","data","id","message","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","getDataFromDb","fetch","then","json","res","setState","putDataToDB","currentIds","map","idToBeAdded","includes","post","deleteFromDB","idTodelete","parseInt","objIdToDelete","forEach","dat","_id","updateDB","updateToApply","objIdToUpdate","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport home from './components/home.html';\nimport sign from './components/sign.html';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n    // initialize our state\n    state = {\n        data: [],\n        id: 0,\n        message: null,\n        intervalIsSet: false,\n        idToDelete: null,\n        idToUpdate: null,\n        objectToUpdate: null,\n    };\n\n    // when component mounts, first thing it does is fetch all existing data in our db\n    // then we incorporate a polling logic so that we can easily see if our db has\n    // changed and implement those changes into our UI\n    componentDidMount() {\n        this.getDataFromDb();\n        if (!this.state.intervalIsSet) {\n            let interval = setInterval(this.getDataFromDb, 1000);\n            this.setState({ intervalIsSet: interval });\n        }\n    }\n\n    // never let a process live forever\n    // always kill a process everytime we are done using it\n    componentWillUnmount() {\n        if (this.state.intervalIsSet) {\n            clearInterval(this.state.intervalIsSet);\n            this.setState({ intervalIsSet: null });\n        }\n    }\n\n    // just a note, here, in the front end, we use the id key of our data object\n    // in order to identify which we want to Update or delete.\n    // for our back end, we use the object id assigned by MongoDB to modify\n    // data base entries\n\n    // our first get method that uses our backend api to\n    // fetch data from our data base\n    getDataFromDb = () => {\n        fetch('http://localhost:3001/api/getData')\n            .then((data) => data.json())\n            .then((res) => this.setState({ data: res.data }));\n    };\n\n    // our put method that uses our backend api\n    // to create new query into our data base\n    putDataToDB = (message) => {\n        let currentIds = this.state.data.map((data) => data.id);\n        let idToBeAdded = 0;\n        while (currentIds.includes(idToBeAdded)) {\n            ++idToBeAdded;\n        }\n\n        axios.post('http://localhost:3001/api/putData', {\n            id: idToBeAdded,\n            message: message,\n        });\n    };\n\n    // our delete method that uses our backend api\n    // to remove existing database information\n    deleteFromDB = (idTodelete) => {\n        parseInt(idTodelete);\n        let objIdToDelete = null;\n        this.state.data.forEach((dat) => {\n            if (dat.id == idTodelete) {\n                objIdToDelete = dat._id;\n            }\n        });\n\n        // axios.delete('http://localhost:3001/api/deleteData', {\n        //   data: {\n        //     id: objIdToDelete,\n        //   },\n        // });\n    };\n\n    // our update method that uses our backend api\n    // to overwrite existing data base information\n    updateDB = (idToUpdate, updateToApply) => {\n        let objIdToUpdate = null;\n        parseInt(idToUpdate);\n        this.state.data.forEach((dat) => {\n            if (dat.id == idToUpdate) {\n                objIdToUpdate = dat._id;\n            }\n        });\n\n        // axios.post('http://localhost:3001/api/updateData', {\n        //   id: objIdToUpdate,\n        //   update: { message: updateToApply },\n        // });\n    };\n\n    // here is our UI\n    // it is easy to understand their functions when you\n    // see them render into our screen\n    render() {\n        const { data } = this.state;\n        return (\n            <div>\n        <div id=\"head\">\n          <div id=\"nav\">\n              <ul>\n                  <a href=\"/learn\"><li>learn</li></a>\n                  <a href=\"/test\"><li>test</li></a>\n                  <a href=\"/teacher\"><li>teachers</li></a>\n                  <a href=\"/student\"><li>students</li></a>\n              </ul>\n          </div>\n        </div>\n        // <div id=\"sign\">\n        //     <div class=\"tab\">\n        //         <input type=\"radio\" id=\"teach\" name=\"group\" checked=\"checked\"/>\n        //         <label for=\"teach\">Вход для учителей</label>\n        //         <form action=\"/loginteachers\" method=\"post\">\n        //             <ul>\n        //                 <li><label for=\"name\">Имя</label>\n        //                     <input type=\"text\" name=\"name\"/></li>\n        //                 <li><label for=\"password\">Пароль</label>\n        //                     <input type=\"password\" name=\"password\"/></li>\n        //                 <li><button type=\"submit\">Войти</button></li>\n        //             </ul>\n        //         </form>\n        //     </div>\n        //     <div class=\"tab\"><label>  /  </label></div>\n        //     <div class=\"tab\">\n        //         <input type=\"radio\" id=\"stud\" name=\"group\"/>\n        //         <label for=\"stud\">Вход для учеников</label>\n        //         <form action=\"/loginstudents\" method=\"post\">\n        //             <ul>\n        //                 <li><label for=\"teacher\">Имя учителя</label>\n        //                     <input type=\"text\" name=\"teacher\"/></li>\n        //                 <li><label for=\"name\">Имя</label>\n        //                     <input type=\"text\" name=\"name\"/></li>\n        //                 <li><label for=\"password\">Пароль</label>\n        //                     <input type=\"password\" name=\"password\"/></li>\n        //                 <li><button type=\"submit\">Войти</button></li>\n        //             </ul>\n        //         </form>\n        //     </div>\n        // </div>\n        </div>);\n    }\n}\n\n// export default App;\n\nexport default (\n    <Route path=\"/\" component={home}>\n    <Route path=\"/\" component={home} />\n    // <Route path=\"/sign\" component={sign} />\n  </Route>\n);"]},"metadata":{},"sourceType":"module"}