{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\Desktop\\\\geo\\\\geo\\\\src\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { authenticationService } from '@/_services';\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) =>\n/*#__PURE__*/\nReact.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    // console.log(props.location.state.user)\n    if (!props.location) return (\n      /*#__PURE__*/\n      React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: props.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 20\n        }\n      })\n    );\n    if (props.location.state.user.school && props.location.pathname === '/teacher') return (\n      /*#__PURE__*/\n      React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 16\n        }\n      }))\n    ); //     if (props.location.state.user.class && props.location.pathname==='/student') {\n    //         // return <Redirect to={{ pathname: '/student'}} />\n    //         return <Component {...props} />\n    // }\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 1\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/julia/Desktop/geo/geo/src/PrivateRoute.jsx"],"names":["React","Route","Redirect","PrivateRoute","component","Component","roles","rest","props","location","pathname","state","from","user","school"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD;AAAA;AACrB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAG;AACzB;AACA,QAAI,CAACA,KAAK,CAACC,QAAX,EACI;AAAA;AAAO,0BAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE,QAAZ;AAAsBC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ,KAAK,CAACC;AAAd;AAA7B,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAER,QAAID,KAAK,CAACC,QAAN,CAAeE,KAAf,CAAqBE,IAArB,CAA0BC,MAA1B,IAAoCN,KAAK,CAACC,QAAN,CAAeC,QAAf,KAA0B,UAAlE,EACI;AAAA;AAAO,0BAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP,MANyB,CASjC;AACA;AACA;AACA;AACC,GAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADA;;AAmBA,eAAeL,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// import { authenticationService } from '@/_services';\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n<Route {...rest} render={props =>{\r\n        // console.log(props.location.state.user)\r\n        if (!props.location) \r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n\r\n    if (props.location.state.user.school && props.location.pathname==='/teacher') \r\n        return <Component {...props} />\r\n\r\n\r\n//     if (props.location.state.user.class && props.location.pathname==='/student') {\r\n//         // return <Redirect to={{ pathname: '/student'}} />\r\n//         return <Component {...props} />\r\n// }\r\n}\r\n}\r\n/>\r\n)\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}