{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\Desktop\\\\geo\\\\geo\\\\src\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { authenticationService } from '@/_services';\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) =>\n/*#__PURE__*/\nReact.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    console.log(props.location.state.user);\n\n    if (!props.location) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Redirect, {\n          to: {\n            pathname: '/login',\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 20\n          }\n        })\n      );\n    } // check if route is restricted by role\n    // authorised so return component\n\n\n    {\n      /*return <Component {...props} />*/\n    }\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/julia/Desktop/geo/geo/src/PrivateRoute.jsx"],"names":["React","Route","Redirect","PrivateRoute","component","Component","roles","rest","props","console","log","location","state","user","pathname","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AAEE,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD;AAAA;AACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAG;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeC,KAAf,CAAqBC,IAAjC;;AACA,QAAI,CAACL,KAAK,CAACG,QAAX,EAAqB;AACjB;AAAA;AAAO,4BAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEG,YAAAA,QAAQ,EAAE,QAAZ;AAAsBF,YAAAA,KAAK,EAAE;AAAEG,cAAAA,IAAI,EAAEP,KAAK,CAACG;AAAd;AAA7B,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AACH,KAJ4B,CAK7B;AACO;;;AACP;AAAC;AAAoC;AACxC,GARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAaF,eAAeR,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// import { authenticationService } from '@/_services';\r\n\r\n  const PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route {...rest} render={props =>{\r\n        console.log(props.location.state.user)\r\n        if (!props.location) {\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n        // check if route is restricted by role\r\n               // authorised so return component\r\n        {/*return <Component {...props} />*/}\r\n    }}\r\n />\r\n)\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}