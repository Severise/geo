{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julia\\\\Desktop\\\\geo\\\\geo\\\\src\\\\PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { authenticationService } from '@/_services';\n\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) =>\n/*#__PURE__*/\nReact.createElement(Route, Object.assign({}, rest, {\n  render: props => {\n    console.log(props.location);\n\n    if (!props.location) {} // return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    // check if route is restricted by role\n    // if (props.location.state.user.school) {\n    //     return <Redirect to={{ pathname: '/teacher'}} />\n    // }\n    // if (props.location.state.user.class) {\n    //     return <Redirect to={{ pathname: '/student'}} />\n    // // authorised so return component\n\n\n    return (\n      /*#__PURE__*/\n      React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }\n      }))\n    );\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["C:/Users/julia/Desktop/geo/geo/src/PrivateRoute.jsx"],"names":["React","Route","Redirect","PrivateRoute","component","Component","roles","rest","props","console","log","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CAEA;;AAEE,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAD;AAAA;AACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAEC,KAAK,IAAG;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;;AACA,QAAI,CAACH,KAAK,CAACG,QAAX,EAAqB,CAEpB,CAFD,CACI;AAEJ;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA;AAAA;AAAO,0BAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AACH,GAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAmBF,eAAeL,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n// import { authenticationService } from '@/_services';\r\n\r\n  const PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route {...rest} render={props =>{\r\n        console.log(props.location)\r\n        if (!props.location) {\r\n            // return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n        // check if route is restricted by role\r\n        // if (props.location.state.user.school) {\r\n        //     return <Redirect to={{ pathname: '/teacher'}} />\r\n        // }\r\n\r\n        // if (props.location.state.user.class) {\r\n        //     return <Redirect to={{ pathname: '/student'}} />\r\n        // // authorised so return component\r\n        return <Component {...props} />\r\n    }}\r\n />\r\n)\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}